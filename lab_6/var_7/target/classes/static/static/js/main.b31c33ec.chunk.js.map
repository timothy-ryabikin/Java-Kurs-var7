{"version":3,"sources":["logo.svg","Component/Navbar/Navbar.jsx","Portals/BodyPortal/BodyPortal.jsx","Component/EntityTemplate/EntityTemplate.jsx","utils.js","Roots/EmployTable/EmployTable.jsx","Roots/EmployeCreate/EmployeCreate.jsx","Component/EditTemplate/EditTemplate.jsx","Roots/EmployeEdit/EmployeEdit.jsx","Roots/DepartmentTable/DepartmentTable.jsx","Roots/DepartmentCreate/DepartmentCreate.jsx","Roots/DepartmentEdit/DepartmentEdit.jsx","Roots/ProjectTable/ProjectTable.jsx","Roots/ProjectCreate/ProjectCreate.jsx","Roots/ProjectEdit/ProjectEdit.jsx","Roots/DepartmentEmployeTable/DepartmentEmployeTable.jsx","Roots/DepartmentEmployeCreate/DepartmentEmployeCreate.jsx","Roots/DepartmentEmployeEdit/DepartmentEmployeEdit.jsx","Roots/Registration/Registration.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","user","this","props","className","id","href","to","Component","BodyPortal","domNode","document","querySelector","children","ReactDOM","createPortal","EntityTemplate","state","createIsActivate","handleOpenModal","style","overflowY","setState","handleCloseModal","name","modal","handleClose","onClick","ModalTemplate","e","stopPropagation","doQuery","url","opts","a","fetch","EmployTable","handleDelete","method","then","employeList","setEmployes","length","Array","filter","employe","map","index","key","firstname","lastname","pathername","position","salary","EmployeCreate","handleSubmit","preventDefault","headers","body","JSON","stringify","response","json","push","handleFirstname","elem","target","value","handleLastname","handlePathername","handlePosition","handleSalary","onSubmit","type","onChange","required","htmlFor","min","EditTemplate","EmployeEdit","mounted","DepartmentTable","departmentList","setDepartments","department","DepartmentCreate","setDepartment","handleName","DepartmentEdit","ProjectTable","projectList","setProject","project","cost","date_beg","date_end","date_end_real","ProjectCreate","departmentID","find","handleCost","handleDepartment","handleDateBeg","handleDateEnd","handleDateEndReal","array","from","multiple","options","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","ProjectEdit","DepartmentEmployeTable","departmentEmployeList","setDepartmentEmploye","dpEmploye","firstnamr","DepartmentEmployeCreate","employeID","dep","emp","handleEmploye","DepartmentEmployeEdit","Registration","username","password","handleUsername","handlePassword","roles","App","employes","departments","departmentEmployes","catch","finally","path","render","match","params","exact","Boolean","window","location","hostname","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,gLCqC5BC,G,6KAjCD,IACCC,EAAQC,KAAKC,MAAbF,KAEP,OACI,6BACI,yBAAKG,UAAU,eACF,MAARH,EACG,kBAAC,WAAD,KACI,wBAAII,GAAG,aAAaD,UAAU,6BAC1B,4BAAI,uBAAGE,KAAK,UAAR,UACJ,4BAAI,kBAAC,IAAD,CAASC,GAAG,iBAAZ,mBAIZ,kBAAC,WAAD,KACI,wBAAIF,GAAG,aAAaD,UAAU,6BAC1B,4BAAI,uBAAGE,KAAK,WAAR,YAGR,wBAAID,GAAG,aAAaD,UAAU,8BAC1B,4BAAI,kBAAC,IAAD,CAASG,GAAG,YAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,eAAZ,eACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,sBAAZ,8B,GAxBfC,cCcNC,G,kNAZXC,QAAUC,SAASC,cAAc,Q,uDAEvB,IACCC,EAAYX,KAAKC,MAAjBU,SAEP,OAAOC,IAASC,aACZF,EACAX,KAAKQ,a,GATQF,cCEnBQ,E,4MACFC,MAAQ,CACJC,kBAAkB,G,EAGtBC,gBAAkB,WACdR,SAASC,cAAc,QAAQQ,MAAMC,UAAY,SAEjD,EAAKC,SAAS,CACVJ,kBAAkB,K,EAI1BK,iBAAmB,WACfZ,SAASC,cAAc,QAAQQ,MAAMC,UAAY,SAGjD,EAAKC,SAAS,CACVJ,kBAAkB,K,uDAIhB,IAAD,EAC2BhB,KAAKC,MAA9BqB,EADF,EACEA,KAAMX,EADR,EACQA,SAAUY,EADlB,EACkBA,MAChBP,EAAoBhB,KAAKe,MAAzBC,iBAEP,OACI,kBAAC,WAAD,KACKA,GACD,kBAAC,EAAD,CAAYL,SAAU,kBAAC,EAAD,CAAea,YAAaxB,KAAKqB,iBAAkBV,SAAUY,MACnF,4BAAKD,IAEHN,GACF,yBAAKS,QAASzB,KAAKiB,gBACdd,GAAG,iBACHD,UAAU,yEACX,uBAAGA,UAAU,kBAAb,QAIJ,yBAAKA,UAAU,aACVS,Q,GAzCQL,aAgDvBoB,EAAgB,SAAC,GAAD,IAAEF,EAAF,EAAEA,YAAab,EAAf,EAAeA,SAAf,OAClB,yBAAKT,UAAU,YAAYuB,QAASD,GAChC,yBAAKtB,UAAU,eAAeuB,QAAS,SAAAE,GAAC,OAAIA,EAAEC,oBACzCjB,GAAS,WAENa,UAMDV,I,yBC5DR,SAAee,EAAtB,oC,4CAAO,WAAuBC,EAAKC,GAA5B,SAAAC,EAAA,sEACUC,MAHF,GAGiBH,EAAKC,GAD9B,oF,0BC+CQG,E,4MA5CXC,aAAe,SAAChC,GACZ0B,EAAQ,gBAAD,OAAiB1B,GAAM,CAC1BiC,OAAQ,WACTC,MAAK,WAAO,IAAD,EACyB,EAAKpC,MAAjCqC,EADG,EACHA,aACPC,EAFU,EACUA,aACe,IAAvBD,EAAYE,OAAeC,QAAUH,EAAYI,QAAO,SAAAC,GAAO,OAAIA,EAAQxC,KAAOA,U,uDAI5F,IAAD,OACEmC,EAAetC,KAAKC,MAApBqC,YAEP,OACI,kBAAC,WAAD,KACI,+BACI,+BACA,4BACI,yCACA,wCACA,2CACA,wCACA,wCAIJ,+BACCA,EAAYM,KAAI,SAACD,EAASE,GAAV,OACb,wBAAIC,IAAKD,GACL,4BAAKF,EAAQI,WACb,4BAAKJ,EAAQK,UACb,4BAAKL,EAAQM,YACb,4BAAKN,EAAQO,UACb,4BAAKP,EAAQQ,QACb,4BAAI,kBAAC,IAAD,CAAM9C,GAAE,mBAAcsC,EAAQxC,KAA9B,SAEJ,4BAAI,uBAAGsB,QAAS,kBAAM,EAAKU,aAAaQ,EAAQxC,KAAKC,KAAK,KAAtD,sB,GArCNE,aCqIX8C,E,4MApIXrC,MAAQ,CACJgC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,OAAQ,I,EAGZE,aAAe,SAAC1B,GACZA,EAAE2B,iBADgB,MAE0C,EAAKvC,MAA1DgC,EAFW,EAEXA,UAAWC,EAFA,EAEAA,SAAUC,EAFV,EAEUA,WAAYC,EAFtB,EAEsBA,SAAUC,EAFhC,EAEgCA,OAFhC,EAG8B,EAAKlD,MAA9CuB,EAHW,EAGXA,YAAac,EAHF,EAGEA,YAAaC,EAHf,EAGeA,YAWjCV,EAAQ,eAAgB,CACpBO,OAAQ,OACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAbSC,KAAKC,UAAU,CACxBX,UAAWA,EACXC,SAAUA,EACVC,WAAYA,EACZC,SAAUA,EACVC,OAAQA,MAUPd,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACFtB,EAAYuB,KAAKD,GACjBrB,EAAYD,GACZd,Q,EAKZsC,gBAAkB,SAACC,GACf,EAAK3C,SAAS,CACV2B,UAAWgB,EAAKC,OAAOC,S,EAI/BC,eAAiB,SAACH,GAEd,EAAK3C,SAAS,CACV4B,SAAUe,EAAKC,OAAOC,S,EAI9BE,iBAAmB,SAACJ,GAEhB,EAAK3C,SAAS,CACV6B,WAAYc,EAAKC,OAAOC,S,EAIhCG,eAAiB,SAACL,GAEd,EAAK3C,SAAS,CACV8B,SAAUa,EAAKC,OAAOC,S,EAI9BI,aAAe,SAACN,GAEZ,EAAK3C,SAAS,CACV+B,OAAQY,EAAKC,OAAOC,S,uDAKlB,IACCzC,EAAexB,KAAKC,MAApBuB,YAEP,OACI,yBAAKtB,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cACrC,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,sBACX,2BAAOC,GAAG,aAAaoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAK8D,gBAChEW,UAAU,IACjB,2BAAOC,QAAQ,cAAf,eAGJ,yBAAKxE,UAAU,sBACX,2BAAOC,GAAG,YAAYoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKkE,eAC/DO,UAAU,IACjB,2BAAOC,QAAQ,aAAf,cAGJ,yBAAKxE,UAAU,sBACX,2BAAOC,GAAG,cAAcoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKmE,iBACjEM,UAAU,IACjB,2BAAOC,QAAQ,eAAf,iBAIR,yBAAKxE,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAOC,GAAG,WAAWoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKoE,eAC9DK,UAAU,IACjB,2BAAOC,QAAQ,YAAf,cAIR,yBAAKxE,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAOC,GAAG,SAASoE,KAAK,SAASrE,UAAU,WAAWyE,IAAK,EAAGH,SAAUxE,KAAKqE,aACtEI,UAAU,IACjB,2BAAOC,QAAQ,UAAf,YAIR,yBAAKxE,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,SACI,uBAAGpB,UAAU,wBAAb,SAGJ,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,SAC5DG,QAASD,GADjB,SAEI,uBAAGtB,UAAU,wBAAb,kB,GA5HAI,aCoBbsE,E,4MAnBX7D,MAAQ,CACJC,kBAAkB,G,uDAGZ,IAAD,EAC2BhB,KAAKC,MAA9BqB,EADF,EACEA,KAAMX,EADR,EACQA,SADR,EACkBY,MAEvB,OACI,kBAAC,WAAD,KACI,4BAAKD,GAEL,yBAAKpB,UAAU,aACVS,Q,GAbML,aCkJZuE,E,4MAhJX9D,MAAQ,CACJgC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,OAAQ,GACR2B,SAAS,G,EAebzB,aAAe,SAAC1B,GAAO,IAAD,EAC0C,EAAKZ,MAA1DgC,EADW,EACXA,UAAWC,EADA,EACAA,SAAUC,EADV,EACUA,WAAYC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,OAC3ChD,EAAM,EAAKF,MAAXE,GAGDyD,EAAOH,KAAKC,UAAU,CACxBX,UAAWA,EACXC,SAAUA,EACVC,WAAYA,EACZC,SAAUA,EACVC,OAAQA,IAGZtB,EAAQ,gBAAD,OAAiB1B,GAAM,CAC1BiC,OAAQ,MACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAAMI,K,EAIdE,gBAAkB,SAACC,GACf,EAAK3C,SAAS,CACV2B,UAAWgB,EAAKC,OAAOC,S,EAI/BC,eAAiB,SAACH,GAEd,EAAK3C,SAAS,CACV4B,SAAUe,EAAKC,OAAOC,S,EAI9BE,iBAAmB,SAACJ,GAEhB,EAAK3C,SAAS,CACV6B,WAAYc,EAAKC,OAAOC,S,EAIhCG,eAAiB,SAACL,GAEd,EAAK3C,SAAS,CACV8B,SAAUa,EAAKC,OAAOC,S,EAI9BI,aAAe,SAACN,GAEZ,EAAK3C,SAAS,CACV+B,OAAQY,EAAKC,OAAOC,S,kEAhEP,IAAD,OACT9D,EAAMH,KAAKC,MAAXE,GAEP0B,EAAQ,gBAAD,OAAiB1B,IACnBkC,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,EAAKxC,SAAS,CACV0D,SAAS,S,+BA8Df,IACCA,EAAW9E,KAAKe,MAAhB+D,QACAxD,EAAQtB,KAAKC,MAAbqB,KAEP,OAAQwD,GACA,kBAAC,WAAD,KACI,4BACKxD,GAEL,yBAAKpB,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cACrC,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,sBACX,2BAAOC,GAAG,aAAaoE,KAAK,OAAOrE,UAAU,WACtCsE,SAAUxE,KAAK8D,gBACfW,UAAU,IACjB,2BAAOC,QAAQ,cAAf,eAGJ,yBAAKxE,UAAU,sBACX,2BAAOC,GAAG,YAAYoE,KAAK,OAAOrE,UAAU,WACrCsE,SAAUxE,KAAKkE,eACfO,UAAU,IACjB,2BAAOC,QAAQ,aAAf,cAGJ,yBAAKxE,UAAU,sBACX,2BAAOC,GAAG,cAAcoE,KAAK,OAAOrE,UAAU,WACvCsE,SAAUxE,KAAKmE,iBACfM,UAAU,IACjB,2BAAOC,QAAQ,eAAf,iBAIR,yBAAKxE,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAOC,GAAG,WAAWoE,KAAK,OAAOrE,UAAU,WACpCsE,SAAUxE,KAAKoE,eACfK,UAAU,IACjB,2BAAOC,QAAQ,YAAf,cAIR,yBAAKxE,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAOC,GAAG,SAASoE,KAAK,SAASrE,UAAU,WAAWyE,IAAK,EACpDH,SAAUxE,KAAKqE,aACfI,UAAU,IACjB,2BAAOC,QAAQ,UAAf,YAIR,yBAAKxE,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,SACI,uBAAGpB,UAAU,wBAAb,iB,GAtIVI,aCuCXyE,E,4MApCX5C,aAAe,SAAChC,GACZ0B,EAAQ,mBAAD,OAAoB1B,GAAM,CAC7BiC,OAAQ,WACTC,MAAK,WAAO,IAAD,EAC+B,EAAKpC,MAAvC+E,EADG,EACHA,gBACPC,EAFU,EACaA,gBACkB,IAA1BD,EAAexC,OAAeC,QAAUuC,EAAetC,QAAO,SAAAwC,GAAU,OAAIA,EAAW/E,KAAOA,U,uDAI3G,IAAD,OACE6E,EAAkBhF,KAAKC,MAAvB+E,eAEP,OACI,kBAAC,WAAD,KACI,+BACI,+BACA,4BACI,sCAIJ,+BACCA,EAAepC,KAAI,SAACsC,EAAYrC,GAAb,OAChB,wBAAIC,IAAKD,GACL,4BAAKqC,EAAW5D,MAChB,4BAAI,kBAAC,IAAD,CAAMjB,GAAE,sBAAiB6E,EAAW/E,KAApC,SAEJ,4BAAI,uBAAGsB,QAAS,kBAAM,EAAKU,aAAa+C,EAAW/E,KAAKC,KAAK,KAAzD,sB,GA7BFE,aCiEf6E,E,4MAjEXpE,MAAQ,CACJO,KAAM,I,EAGV+B,aAAe,SAAC1B,GACZA,EAAE2B,iBADgB,IAEXhC,EAAQ,EAAKP,MAAbO,KAFW,EAGmC,EAAKrB,MAAnDuB,EAHW,EAGXA,YAAawD,EAHF,EAGEA,eAAgBI,EAHlB,EAGkBA,cAOpCvD,EAAQ,kBAAmB,CACvBO,OAAQ,OACRmB,QAAS,CACL,eAAgB,oBAEpBC,KATSC,KAAKC,UAAU,CACxBpC,KAAMA,MAULe,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACFoB,EAAenB,KAAKD,GACpBwB,EAAcJ,GACdxD,Q,EAIZ6D,WAAa,SAACtB,GACV,EAAK3C,SAAS,CACVE,KAAMyC,EAAKC,OAAOC,S,uDAIhB,IACCzC,EAAexB,KAAKC,MAApBuB,YAEP,OACI,yBAAKtB,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cACrC,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,sBACX,2BAAOC,GAAG,OAAOoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKqF,WAC1DZ,UAAU,IACjB,2BAAOC,QAAQ,QAAf,UAIR,yBAAKxE,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,SACI,uBAAGpB,UAAU,wBAAb,SAGJ,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,SAC5DG,QAASD,GADjB,SAEI,uBAAGtB,UAAU,wBAAb,kB,GAzDGI,aCoDhBgF,E,4MAnDXvE,MAAQ,CACJO,KAAM,I,EAGV+B,aAAe,WAAO,IACX/B,EAAQ,EAAKP,MAAbO,KACAnB,EAAM,EAAKF,MAAXE,GAEDyD,EAAOH,KAAKC,UAAU,CACxBpC,KAAMA,IAGVO,EAAQ,mBAAD,OAAoB1B,GAAM,CAC7BiC,OAAQ,MACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAAMI,K,EAKdyB,WAAa,SAACtB,GACV,EAAK3C,SAAS,CACVE,KAAMyC,EAAKC,OAAOC,S,uDAKtB,OACI,yBAAK/D,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cACrC,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,sBACX,2BAAOC,GAAG,OAAOoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKqF,WAC1DZ,UAAU,IACjB,2BAAOC,QAAQ,QAAf,UAIR,yBAAKxE,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,SACI,uBAAGpB,UAAU,wBAAb,gB,GA3CCI,aCiDdiF,E,4MA9CXpD,aAAe,SAAChC,GACZ0B,EAAQ,gBAAD,OAAiB1B,GAAM,CAC1BiC,OAAQ,WACTC,MAAK,WAAO,IAAD,EACwB,EAAKpC,MAAhCuF,EADG,EACHA,aACPC,EAFU,EACUA,YACc,IAAvBD,EAAYhD,OAAeC,QAAU+C,EAAY9C,QAAO,SAAAgD,GAAO,OAAIA,EAAQvF,KAAOA,U,uDAI3F,IAAD,OACEqF,EAAexF,KAAKC,MAApBuF,YAEP,OACI,kBAAC,WAAD,KACI,+BACI,+BACA,4BACI,oCACA,oCACA,0CACA,wCACA,wCACA,+CAIJ,+BACCA,EAAY5C,KAAI,SAAC8C,EAAS7C,GAAV,OACb,wBAAIC,IAAKD,GACL,4BAAK6C,EAAQpE,MACb,4BAAKoE,EAAQC,MACb,4BAAKD,EAAQR,WAAW5D,MACxB,4BAAKoE,EAAQE,UACb,4BAAKF,EAAQG,UACb,4BAAKH,EAAQI,eACb,4BAAI,kBAAC,IAAD,CAAMzF,GAAE,mBAAcqF,EAAQvF,KAA9B,SAEJ,4BAAI,uBAAGsB,QAAS,kBAAM,EAAKU,aAAauD,EAAQvF,KAAKC,KAAK,KAAtD,sB,GAvCLE,a,QC6KZyF,E,4MA3KXhF,MAAQ,CACJO,KAAM,GACNqE,KAAM,GACNK,aAAc,GACdJ,SAAU,GACVC,SAAU,GACVC,cAAe,GACfd,eAAgBvC,S,EAepBY,aAAe,SAAC1B,GACZA,EAAE2B,iBADgB,MAEoE,EAAKvC,MAApFO,EAFW,EAEXA,KAAMqE,EAFK,EAELA,KAAMK,EAFD,EAECA,aAAchB,EAFf,EAEeA,eAAgBY,EAF/B,EAE+BA,SAAUC,EAFzC,EAEyCA,SAAUC,EAFnD,EAEmDA,cAFnD,EAG6B,EAAK7F,MAA7CuB,EAHW,EAGXA,YAAagE,EAHF,EAGEA,YAAaC,EAHf,EAGeA,WAWjC5D,EAAQ,eAAgB,CACpBO,OAAQ,OACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAdSC,KAAKC,UAAU,CACxBpC,KAAMA,EACNqE,KAAMA,EACNT,WAAYF,EAAeiB,MAAK,SAAAf,GAAU,OAAIA,EAAW/E,IAAM6F,KAC/DJ,SAAUA,EACVC,SAAUA,EACVC,cAAeA,MAUdzD,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF4B,EAAY3B,KAAKD,GACjB6B,EAAWD,GACXhE,Q,EAIZ6D,WAAa,SAACtB,GACV,EAAK3C,SAAS,CACVE,KAAMyC,EAAKC,OAAOC,S,EAI1BiC,WAAa,SAACnC,GACV,EAAK3C,SAAS,CACVuE,KAAM5B,EAAKC,OAAOC,S,EAI1BkC,iBAAmB,SAACpC,GAChB,EAAK3C,SAAS,CACV4E,aAAcjC,EAAKC,OAAOC,S,EAIlCmC,cAAgB,SAACrC,GACb,EAAK3C,SAAS,CACVwE,SAAU7B,EAAKC,OAAOC,S,EAI9BoC,cAAgB,SAACtC,GACb,EAAK3C,SAAS,CACVyE,SAAU9B,EAAKC,OAAOC,S,EAI9BqC,kBAAoB,SAACvC,GACjB,EAAK3C,SAAS,CACV0E,cAAe/B,EAAKC,OAAOC,S,kEAzEd,IAAD,OAChBpC,EAAQ,mBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,IAAM2C,EAAQ9D,MAAM+D,KAAK5C,GACzB,EAAKxC,SAAS,CACV4D,eAAgBuB,EAChBP,aAA+B,IAAjBO,EAAM/D,OAAe,EAAKzB,MAAMiF,aAAeO,EAAM,GAAGpG,U,+BAsE5E,IACCqB,EAAexB,KAAKC,MAApBuB,YACAwD,EAAkBhF,KAAKe,MAAvBiE,eAEP,OACI,yBAAK9E,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cACrC,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,sBACX,2BAAOC,GAAG,OAAOoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKqF,WAC1DZ,UAAU,IACjB,2BAAOC,QAAQ,QAAf,SAGJ,yBAAKxE,UAAU,sBACX,2BAAOC,GAAG,OAAOoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKkG,WAC1DzB,UAAU,IACjB,2BAAOC,QAAQ,QAAf,UAIR,yBAAKxE,UAAU,0BACX,kBAAC,SAAD,CACIC,GAAG,WACHsG,UAAU,EACVjC,SAAUxE,KAAKmG,iBACfO,QAAS,CACLC,QAAS,GACTC,gBAAiB,CACbC,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,OAAO,EACPC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,MAElB/C,UAAU,GACZO,EAAepC,KAAI,SAAAsC,GAAU,OAC1B,4BAAQpC,IAAKoC,EAAW/E,GAAI8D,MAAOiB,EAAW/E,IAAK+E,EAAW5D,WAI1E,yBAAKpB,UAAU,sBACX,2BAAOC,GAAG,WAAWoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKoG,cAC9D3B,UAAU,IACjB,2BAAOC,QAAQ,YAAf,aAGJ,yBAAKxE,UAAU,uBACX,2BAAOC,GAAG,WAAWoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKqG,cAC9D5B,UAAU,IACjB,2BAAOC,QAAQ,YAAf,aAGJ,yBAAKxE,UAAU,uBACX,2BAAOC,GAAG,gBAAgBoE,KAAK,OAAOrE,UAAU,WAAWyE,IAAK,EACzDH,SAAUxE,KAAKsG,kBACf7B,UAAU,IACjB,2BAAOC,QAAQ,iBAAf,kBAGJ,yBAAKxE,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,SACI,uBAAGpB,UAAU,wBAAb,SAGJ,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,SAC5DG,QAASD,GADjB,SAEI,uBAAGtB,UAAU,wBAAb,kB,GAnKAI,aCgKbmH,E,4MA9JX1G,MAAQ,CACJO,KAAM,GACNqE,KAAM,GACNK,aAAc,GACdJ,SAAU,GACVC,SAAU,GACVC,cAAe,GACfd,eAAgBvC,S,EAepBY,aAAe,SAAC1B,GAAO,IAAD,EACoE,EAAKZ,MAApFO,EADW,EACXA,KAAMqE,EADK,EACLA,KAAMK,EADD,EACCA,aAAchB,EADf,EACeA,eAAgBY,EAD/B,EAC+BA,SAAUC,EADzC,EACyCA,SAAUC,EADnD,EACmDA,cAC9D3F,EAAM,EAAKF,MAAXE,GAEDyD,EAAOH,KAAKC,UAAU,CACxBpC,KAAMA,EACNqE,KAAMA,EACNT,WAAYF,EAAeiB,MAAK,SAAAf,GAAU,OAAIA,EAAW/E,IAAM6F,KAC/DJ,SAAUA,EACVC,SAAUA,EACVC,cAAeA,IAGnBjE,EAAQ,gBAAD,OAAiB1B,GAAM,CAC1BiC,OAAQ,MACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAAMI,K,EAIdyB,WAAa,SAACtB,GACV,EAAK3C,SAAS,CACVE,KAAMyC,EAAKC,OAAOC,S,EAI1BiC,WAAa,SAACnC,GACV,EAAK3C,SAAS,CACVuE,KAAM5B,EAAKC,OAAOC,S,EAI1BkC,iBAAmB,SAACpC,GAChB,EAAK3C,SAAS,CACV4E,aAAcjC,EAAKC,OAAOC,S,EAIlCmC,cAAgB,SAACrC,GACb,EAAK3C,SAAS,CACVwE,SAAU7B,EAAKC,OAAOC,S,EAI9BoC,cAAgB,SAACtC,GACb,EAAK3C,SAAS,CACVyE,SAAU9B,EAAKC,OAAOC,S,EAI9BqC,kBAAoB,SAACvC,GACjB,EAAK3C,SAAS,CACV0E,cAAe/B,EAAKC,OAAOC,S,kEAlEd,IAAD,OAChBpC,EAAQ,mBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,IAAM2C,EAAQ9D,MAAM+D,KAAK5C,GACzB,EAAKxC,SAAS,CACV4D,eAAgBuB,EAChBP,aAA+B,IAAjBO,EAAM/D,OAAe,EAAKzB,MAAMiF,aAAeO,EAAM,GAAGpG,U,+BA+D5E,IACC6E,EAAkBhF,KAAKe,MAAvBiE,eAEP,OACI,yBAAK9E,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cACrC,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,sBACX,2BAAOC,GAAG,OAAOoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKqF,WAC1DZ,UAAU,IACjB,2BAAOC,QAAQ,QAAf,SAGJ,yBAAKxE,UAAU,sBACX,2BAAOC,GAAG,OAAOoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKkG,WAC1DzB,UAAU,IACjB,2BAAOC,QAAQ,QAAf,UAIR,yBAAKxE,UAAU,0BACX,kBAAC,SAAD,CACIC,GAAG,WACHsG,UAAU,EACVjC,SAAUxE,KAAKmG,iBACfO,QAAS,CACLC,QAAS,GACTC,gBAAiB,CACbC,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,OAAO,EACPC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,MAElB/C,UAAU,GACZO,EAAepC,KAAI,SAAAsC,GAAU,OAC1B,4BAAQpC,IAAKoC,EAAW/E,GAAI8D,MAAOiB,EAAW/E,IAAK+E,EAAW5D,WAI1E,yBAAKpB,UAAU,sBACX,2BAAOC,GAAG,WAAWoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKoG,cAC9D3B,UAAU,IACjB,2BAAOC,QAAQ,YAAf,aAGJ,yBAAKxE,UAAU,uBACX,2BAAOC,GAAG,WAAWoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKqG,cAC9D5B,UAAU,IACjB,2BAAOC,QAAQ,YAAf,aAGJ,yBAAKxE,UAAU,uBACX,2BAAOC,GAAG,gBAAgBoE,KAAK,OAAOrE,UAAU,WAAWyE,IAAK,EACzDH,SAAUxE,KAAKsG,kBACf7B,UAAU,IACjB,2BAAOC,QAAQ,iBAAf,kBAGJ,yBAAKxE,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,SACI,uBAAGpB,UAAU,wBAAb,gB,GAtJFI,aCwCXoH,E,4MAtCXvF,aAAe,SAAChC,GACZ0B,EAAQ,0BAAD,OAA2B1B,GAAM,CACpCiC,OAAQ,WACTC,MAAK,WAAO,IAAD,EAC4C,EAAKpC,MAApD0H,EADG,EACHA,uBACPC,EAFU,EACoBA,sBACwB,IAAjCD,EAAsBnF,OAAeC,QAAUkF,EAAsBjF,QAAO,SAAAgD,GAAO,OAAIA,EAAQvF,KAAOA,U,uDAIzH,IAAD,OACEwH,EAAyB3H,KAAKC,MAA9B0H,sBAEP,OACI,kBAAC,WAAD,KACI,+BACI,+BACA,4BACI,0CACA,yCAIJ,+BACCA,EAAsB/E,KAAI,SAACiF,EAAWhF,GAAZ,OACvB,wBAAIC,IAAKD,GACL,4BAAKgF,EAAU3C,WAAW5D,MAC1B,4BAAKuG,EAAUlF,QAAQmF,UAAvB,IAAmCD,EAAUlF,QAAQK,SAArD,IAAgE6E,EAAUlF,QAAQM,YAClF,4BAAI,kBAAC,IAAD,CAAM5C,GAAE,6BAAwBwH,EAAU1H,KAA1C,SAEJ,4BAAI,uBAAGsB,QAAS,kBAAM,EAAKU,aAAa0F,EAAU1H,KAAKC,KAAK,KAAxD,sB,GA/BKE,aCuJtByH,E,4MArJXhH,MAAQ,CACJiF,aAAc,GACdgC,UAAW,GACXhD,eAAgBvC,QAChBH,YAAaG,S,EAyBjBY,aAAe,SAAC1B,GACZA,EAAE2B,iBADgB,MAE6C,EAAKvC,MAA7DiF,EAFW,EAEXA,aAAchB,EAFH,EAEGA,eAAgBgD,EAFnB,EAEmBA,UAAW1F,EAF9B,EAE8BA,YAF9B,EAGiD,EAAKrC,MAAjEuB,EAHW,EAGXA,YAAamG,EAHF,EAGEA,sBAAuBC,EAHzB,EAGyBA,qBAQ3C/F,EAAQ,yBAA0B,CAC9BO,OAAQ,OACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAVSC,KAAKC,UAAU,CACxBwB,WAAYF,EAAeiB,MAAK,SAAAgC,GAAG,OAAIA,EAAI9H,IAAM6F,KACjDrD,QAASL,EAAY2D,MAAK,SAAAiC,GAAG,OAAIA,EAAI/H,IAAM6H,SAU1C3F,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF+D,EAAsB9D,KAAKD,GAC3BgE,EAAqBD,GACrBnG,Q,EAKZ2E,iBAAmB,SAACpC,GAChB,EAAK3C,SAAS,CACV4E,aAAcjC,EAAKC,OAAOC,S,EAIlCkE,cAAgB,SAACpE,GACb,EAAK3C,SAAS,CACV4G,UAAWjE,EAAKC,OAAOC,S,kEAzDV,IAAD,OAChBpC,EAAQ,mBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,IAAM2C,EAAQ9D,MAAM+D,KAAK5C,GACzB,EAAKxC,SAAS,CACV4D,eAAgBuB,EAChBP,aAA+B,IAAjBO,EAAM/D,OAAe,EAAKzB,MAAMiF,aAAeO,EAAM,GAAGpG,QAIlF0B,EAAQ,gBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,IAAM2C,EAAQ9D,MAAM+D,KAAK5C,GACzB,EAAKxC,SAAS,CACVkB,YAAaiE,EACbyB,UAA4B,IAAjBzB,EAAM/D,OAAe,EAAKzB,MAAMiH,UAAYzB,EAAM,GAAGpG,U,+BA4CtE,IACCqB,EAAexB,KAAKC,MAApBuB,YADF,EAEiCxB,KAAKe,MAApCiE,EAFF,EAEEA,eAAgB1C,EAFlB,EAEkBA,YAEvB,OACI,yBAAKpC,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cAErC,yBAAKnD,UAAU,0BACX,kBAAC,SAAD,CACIC,GAAG,WACHsG,UAAU,EACVjC,SAAUxE,KAAKmG,iBACfO,QAAS,CACLC,QAAS,GACTC,gBAAiB,CACbC,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,OAAO,EACPC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,MAElB/C,UAAU,GACZO,EAAepC,KAAI,SAAAsC,GAAU,OAC1B,4BAAQpC,IAAK,aAAeoC,EAAW/E,GAC/B8D,MAAOiB,EAAW/E,IAAK+E,EAAW5D,WAItD,yBAAKpB,UAAU,0BACX,kBAAC,SAAD,CACIC,GAAG,WACHsG,UAAU,EACVjC,SAAUxE,KAAKmI,cACfzB,QAAS,CACLC,QAAS,GACTC,gBAAiB,CACbC,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,OAAO,EACPC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,MAElB/C,UAAU,GACZnC,EAAYM,KAAI,SAAAD,GAAO,OACpB,4BAAQG,IAAK,WAAaH,EAAQxC,GAC1B8D,MAAOtB,EAAQxC,IAAKwC,EAAQI,UADpC,IACgDJ,EAAQK,SADxD,IACmEL,EAAQM,iBAIvF,yBAAK/C,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,SACI,uBAAGpB,UAAU,wBAAb,SAGJ,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,SAC5DG,QAASD,GADjB,SAEI,uBAAGtB,UAAU,wBAAb,kB,GA7IUI,aC+IvB8H,E,4MA7IXrH,MAAQ,CACJiF,aAAc,GACdgC,UAAW,GACXhD,eAAgBvC,QAChBH,YAAaG,S,EAyBjBY,aAAe,SAAC1B,GAAO,IAAD,EAC6C,EAAKZ,MAA7DiF,EADW,EACXA,aAAchB,EADH,EACGA,eAAgBgD,EADnB,EACmBA,UAAW1F,EAD9B,EAC8BA,YACzCnC,EAAM,EAAKF,MAAXE,GAEDyD,EAAOH,KAAKC,UAAU,CACxBwB,WAAYF,EAAeiB,MAAK,SAAAgC,GAAG,OAAIA,EAAI9H,IAAM6F,KACjDrD,QAASL,EAAY2D,MAAK,SAAAiC,GAAG,OAAIA,EAAI/H,IAAM6H,OAG/CnG,EAAQ,0BAAD,OAA2B1B,GAAM,CACpCiC,OAAQ,MACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAAMI,K,EAKduC,iBAAmB,SAACpC,GAChB,EAAK3C,SAAS,CACV4E,aAAcjC,EAAKC,OAAOC,S,EAIlCkE,cAAgB,SAACpE,GACb,EAAK3C,SAAS,CACV4G,UAAWjE,EAAKC,OAAOC,S,kEAjDV,IAAD,OAChBpC,EAAQ,mBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,IAAM2C,EAAQ9D,MAAM+D,KAAK5C,GACzB,EAAKxC,SAAS,CACV4D,eAAgBuB,EAChBP,aAA+B,IAAjBO,EAAM/D,OAAe,EAAKzB,MAAMiF,aAAeO,EAAM,GAAGpG,QAIlF0B,EAAQ,gBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,IAAM2C,EAAQ9D,MAAM+D,KAAK5C,GACzB,EAAKxC,SAAS,CACVkB,YAAaiE,EACbyB,UAA4B,IAAjBzB,EAAM/D,OAAe,EAAKzB,MAAMiH,UAAYzB,EAAM,GAAGpG,U,+BAoCtE,IACCqB,EAAexB,KAAKC,MAApBuB,YADF,EAEiCxB,KAAKe,MAApCiE,EAFF,EAEEA,eAAgB1C,EAFlB,EAEkBA,YAEvB,OACI,yBAAKpC,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cAErC,yBAAKnD,UAAU,0BACX,kBAAC,SAAD,CACIC,GAAG,WACHsG,UAAU,EACVjC,SAAUxE,KAAKmG,iBACfO,QAAS,CACLC,QAAS,GACTC,gBAAiB,CACbC,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,OAAO,EACPC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,MAElB/C,UAAU,GACZO,EAAepC,KAAI,SAAAsC,GAAU,OAC1B,4BAAQpC,IAAK,aAAeoC,EAAW/E,GAC/B8D,MAAOiB,EAAW/E,IAAK+E,EAAW5D,WAItD,yBAAKpB,UAAU,0BACX,kBAAC,SAAD,CACIC,GAAG,WACHsG,UAAU,EACVjC,SAAUxE,KAAKmI,cACfzB,QAAS,CACLC,QAAS,GACTC,gBAAiB,CACbC,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,OAAO,EACPC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,MAElB/C,UAAU,GACZnC,EAAYM,KAAI,SAAAD,GAAO,OACpB,4BAAQG,IAAK,WAAaH,EAAQxC,GAC1B8D,MAAOtB,EAAQxC,IAAKwC,EAAQI,UADpC,IACgDJ,EAAQK,SADxD,IACmEL,EAAQM,iBAIvF,yBAAK/C,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,SACI,uBAAGpB,UAAU,wBAAb,SAGJ,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,SAC5DG,QAASD,GADjB,SAEI,uBAAGtB,UAAU,wBAAb,kB,GArIQI,aCiErB+H,E,4MAhEXtH,MAAQ,CACJuH,SAAU,GACVC,SAAU,I,EAGdC,eAAiB,SAACzE,GACd,EAAK3C,SAAS,CACVkH,SAAUvE,EAAKC,OAAOC,S,EAI9BwE,eAAiB,SAAC1E,GACd,EAAK3C,SAAS,CACVmH,SAAUxE,EAAKC,OAAOC,S,EAI9BZ,aAAe,WAAO,IAAD,EACY,EAAKtC,MAA3BuH,EADU,EACVA,SAAUC,EADA,EACAA,SAQjB1G,EAAQ,QAAS,CACbO,OAAQ,OACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAXSC,KAAKC,UAAU,CACxB4E,SAAUA,EACVC,SAAUA,EACVG,MAAO,CAAC,a,uDAaZ,OACI,yBAAKxI,UAAU,OACX,0BAAMA,UAAU,UAAUoE,SAAUtE,KAAKqD,cACrC,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,sBACX,2BAAOC,GAAG,OAAOoE,KAAK,OAAOrE,UAAU,WAAWsE,SAAUxE,KAAKwI,eAC1D/D,UAAU,IACjB,2BAAOC,QAAQ,QAAf,aAGJ,yBAAKxE,UAAU,sBACX,2BAAOC,GAAG,OAAOoE,KAAK,WAAWrE,UAAU,WAAWsE,SAAUxE,KAAKyI,eAC9DhE,UAAU,IACjB,2BAAOC,QAAQ,QAAf,cAIR,yBAAKxE,UAAU,iBACX,4BAAQA,UAAU,+BAA+BqE,KAAK,SAASjD,KAAK,UAApE,eACI,uBAAGpB,UAAU,wBAAb,gB,GAxDDI,aCsNZqI,E,4MA7LX5H,MAAQ,CACJhB,KAAM,KACN+E,SAAS,EACTxC,YAAaG,QACbuC,eAAgBvC,QAChB+C,YAAa/C,QACbkF,sBAAuBlF,S,EAG3BF,YAAc,SAACqG,GACX,EAAKxH,SAAS,CACVkB,YAAaG,MAAM+D,KAAKoC,M,EAIhCxD,cAAgB,SAACyD,GACb,EAAKzH,SAAS,CACV4D,eAAgBvC,MAAM+D,KAAKqC,M,EAInCpD,WAAa,SAACC,GACV,EAAKtE,SAAS,CACVoE,YAAa/C,MAAM+D,KAAKd,M,EAIhCkC,qBAAuB,SAACkB,GACpB,EAAK1H,SAAS,CACVuG,sBAAuBlF,MAAM+D,KAAKsC,M,kEAKrB,IAAD,OAChBjH,EAAQ,SACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF/B,EAAQ,gBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,EAAKxC,SAAS,CACVkB,YAAasB,OAIzB/B,EAAQ,mBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,EAAKxC,SAAS,CACV4D,eAAgBpB,OAI5B/B,EAAQ,gBACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,EAAKxC,SAAS,CACVoE,YAAa5B,OAIzB/B,EAAQ,0BACHQ,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,UAC1BvB,MAAK,SAAAuB,GACF,EAAKxC,SAAS,CACVuG,sBAAuB/D,OAInC,EAAKxC,SAAS,CACVrB,KAAM6D,OAGbmF,OAAM,WACH,EAAK3H,SAAS,CACVrB,KAAM,UAGbiJ,SAAQ,WACL,EAAK5H,SAAS,CACV0D,SAAS,S,+BAKf,IAAD,SACoF9E,KAAKe,MAAvFuB,EADF,EACEA,YAAa0C,EADf,EACeA,eAAgBQ,EAD/B,EAC+BA,YAAamC,EAD5C,EAC4CA,sBAAuB7C,EADnE,EACmEA,QAAS/E,EAD5E,EAC4EA,KAEjF,OAAO+E,EACH,yBAAK5E,UAAU,OACX,kBAAC,IAAD,KACI,gCACI,kBAAC,EAAD,CAAQH,KAAMA,KAGlB,8BACc,OAATA,EACG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkJ,KAAK,eAAeC,OAAQ,gBAAEC,EAAF,EAAEA,MAAF,OAC/B,kBAAC,EAAD,CAAc7H,KAAK,UAAUX,SAAU,kBAAC,EAAD,CAAaR,GAAIgJ,EAAMC,OAAOjJ,UAGzE,kBAAC,IAAD,CAAOkJ,OAAK,EAACJ,KAAK,WAAWC,OAAQ,kBACjC,kBAAC,EAAD,CAAgB5H,KAAK,UACLX,SAAU,kBAAC,EAAD,CAAa4B,YAAa,SAACZ,GAAD,OAAO,EAAKY,YAAYZ,IACrCW,YAAaA,IACpCf,MAAO,SAACC,GAAD,OAAiB,kBAAC,EAAD,CACpBe,YAAa,SAACZ,GAAD,OAAO,EAAKY,YAAYZ,IACrCW,YAAaA,EACbd,YAAaA,UAIrC,kBAAC,IAAD,CAAOyH,KAAK,kBAAkBC,OAAQ,gBAAEC,EAAF,EAAEA,MAAF,OAClC,kBAAC,EAAD,CAAc7H,KAAK,aAAaX,SAAU,kBAAC,EAAD,CAAgBR,GAAIgJ,EAAMC,OAAOjJ,UAG/E,kBAAC,IAAD,CAAOkJ,OAAK,EAACJ,KAAK,eACd,kBAAC,EAAD,CAAgB3H,KAAK,aACLX,SAAU,kBAAC,EAAD,CACNsE,eAAgB,SAACtD,GAAD,OAAO,EAAKyD,cAAczD,IAC1CqD,eAAgBA,IACpBzD,MAAO,SAACC,GAAD,OACH,kBAAC,EAAD,CACI4D,cAAe,SAACzD,GAAD,OAAO,EAAKyD,cAAczD,IACzCqD,eAAgBA,EAChBxD,YAAaA,QAKzC,kBAAC,IAAD,CAAOyH,KAAK,eAAeC,OAAQ,gBAAEC,EAAF,EAAEA,MAAF,OAC/B,kBAAC,EAAD,CAAc7H,KAAK,UAAUX,SAAU,kBAAC,EAAD,CAAaR,GAAIgJ,EAAMC,OAAOjJ,UAGzE,kBAAC,IAAD,CAAOkJ,OAAK,EAACJ,KAAK,WAAWC,OAAQ,kBACjC,kBAAC,EAAD,CAAgB5H,KAAK,UACLX,SAAU,kBAAC,EAAD,CAAc8E,WAAY,SAAC9D,GAAD,OAAO,EAAK8D,WAAW9D,IACnC6D,YAAaA,IACrCjE,MAAO,SAACC,GAAD,OACH,kBAAC,EAAD,CACIiE,WAAY,SAAC9D,GAAD,OAAO,EAAK8D,WAAW9D,IACnC6D,YAAaA,EACbhE,YAAaA,UAIzC,kBAAC,IAAD,CAAOyH,KAAK,yBAAyBC,OAAQ,gBAAEC,EAAF,EAAEA,MAAF,OACzC,kBAAC,EAAD,CAAc7H,KAAK,UACLX,SAAU,kBAAC,EAAD,CAAuBR,GAAIgJ,EAAMC,OAAOjJ,UAGpE,kBAAC,IAAD,CAAOkJ,OAAK,EAACJ,KAAK,sBACd,kBAAC,EAAD,CAAgB3H,KAAK,oBACLX,SAAU,kBAAC,EAAD,CACNiH,qBAAsB,SAACjG,GAAD,OAAO,EAAKiG,qBAAqBjG,IACvDgG,sBAAuBA,IAC3BpG,MAAO,SAACC,GAAD,OACH,kBAAC,EAAD,CACIoG,qBAAsB,SAACjG,GAAD,OAAO,EAAKiG,qBAAqBjG,IACvDgG,sBAAuBA,EACvBnG,YAAaA,QAKzC,kBAAC,IAAD,CAAOyH,KAAK,KACR,4CAIR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOA,KAAK,iBACR,kBAAC,EAAD,WASxB,kC,GAzLM3I,aChBEgJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASN,MACvB,2DCZNvI,IAASsI,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,OAEFjJ,SAASkJ,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzH,MAAK,SAAA0H,GACJA,EAAaC,gBAEdjB,OAAM,SAAAkB,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b31c33ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component, Fragment} from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        const {user} = this.props\n\n        return (\n            <nav>\n                <div className=\"nav-wrapper\">\n                    {user == null ? (\n                        <Fragment>\n                            <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n                                <li><a href=\"/login\">Login</a></li>\n                                <li><NavLink to=\"/registration\">Registration</NavLink></li>\n                            </ul>\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n                                <li><a href=\"/logout\">Logout</a></li>\n                            </ul>\n\n                            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                                <li><NavLink to=\"/employe\">Employe</NavLink></li>\n                                <li><NavLink to=\"/department\">Department</NavLink></li>\n                                <li><NavLink to=\"/project\">Project</NavLink></li>\n                                <li><NavLink to=\"/departmentEmploye\">DepartmentEmploye</NavLink></li>\n                            </ul>\n                        </Fragment>\n                    )}\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nclass BodyPortal extends Component {\n\n    domNode = document.querySelector('body');\n\n    render() {\n        const {children} = this.props;\n\n        return ReactDOM.createPortal(\n            children,\n            this.domNode\n        );\n    }\n}\n\nexport default BodyPortal;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './EntityTemplate.css';\nimport BodyPortal from \"../../Portals/BodyPortal/BodyPortal\";\n\nclass EntityTemplate extends Component {\n    state = {\n        createIsActivate: false\n    }\n\n    handleOpenModal = () => {\n        document.querySelector(\"body\").style.overflowY = 'hidden';\n\n        this.setState({\n            createIsActivate: true\n        });\n    }\n\n    handleCloseModal = () => {\n        document.querySelector(\"body\").style.overflowY = 'scroll';\n\n\n        this.setState({\n            createIsActivate: false\n        });\n    }\n\n    render() {\n        const {name, children, modal} = this.props;\n        const {createIsActivate} = this.state;\n\n        return (\n            <Fragment>\n                {createIsActivate &&\n                <BodyPortal children={<ModalTemplate handleClose={this.handleCloseModal} children={modal}/>}/>}\n                <h3>{name}</h3>\n\n                {!createIsActivate &&\n                <div onClick={this.handleOpenModal}\n                     id=\"addModalButton\"\n                     className=\"btn-floating btn-large waves-effect waves-light red addButtonPosition\">\n                    <i className=\"material-icons\">add</i>\n                </div>\n                }\n\n                <div className=\"container\">\n                    {children}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nconst ModalTemplate = ({handleClose, children}) => (\n    <div className=\"fade grid\" onClick={handleClose}>\n        <div className=\"myModal grid\" onClick={e => e.stopPropagation()}>\n            {children(() => {\n                //TODO ОБНОВЛЯЕМ МОДЕЛЬ\n                handleClose();\n            })}\n        </div>\n    </div>\n);\n\nexport default EntityTemplate;","\"use strict\"\n\nconst DOMAIN = ''; //http://localhost:8080\n\nexport async function doQuery(url, opts) {\n    return await fetch(DOMAIN + url, opts);\n}","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {doQuery} from \"../../utils\";\n\nclass EmployTable extends Component {\n\n    handleDelete = (id) => {\n        doQuery(`/api/employe/${id}`, {\n            method: 'DELETE'\n        }).then(() => {\n            const {employeList, setEmployes} = this.props;\n            setEmployes(employeList.length === 1 ? Array() : employeList.filter(employe => employe.id !== id));\n        })\n    }\n\n    render() {\n        const {employeList} = this.props;\n\n        return (\n            <Fragment>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>Firstname</th>\n                        <th>Lastname</th>\n                        <th>Pathesrname</th>\n                        <th>Position</th>\n                        <th>Salary</th>\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    {employeList.map((employe, index) =>\n                        <tr key={index}>\n                            <td>{employe.firstname}</td>\n                            <td>{employe.lastname}</td>\n                            <td>{employe.pathername}</td>\n                            <td>{employe.position}</td>\n                            <td>{employe.salary}</td>\n                            <td><Link to={`/employe/${employe.id}`}>Edit</Link>\n                            </td>\n                            <td><a onClick={() => this.handleDelete(employe.id)} href=\"#\">Delete</a></td>\n                        </tr>)}\n                    </tbody>\n                </table>\n            </Fragment>\n        );\n    }\n}\n\nexport default EmployTable;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {doQuery} from \"../../utils\";\n\nclass EmployeCreate extends Component {\n\n    state = {\n        firstname: '',\n        lastname: '',\n        pathername: '',\n        position: '',\n        salary: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {firstname, lastname, pathername, position, salary} = this.state;\n        const {handleClose, employeList, setEmployes} = this.props;\n\n\n        const json = JSON.stringify({\n            firstname: firstname,\n            lastname: lastname,\n            pathername: pathername,\n            position: position,\n            salary: salary\n        });\n\n        doQuery('/api/employe', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: json\n        })\n            .then(response => response.json())\n            .then(json => {\n                employeList.push(json)\n                setEmployes(employeList);\n                handleClose();\n            });\n    }\n\n\n    handleFirstname = (elem) => {\n        this.setState({\n            firstname: elem.target.value\n        })\n    }\n\n    handleLastname = (elem) => {\n\n        this.setState({\n            lastname: elem.target.value\n        })\n    }\n\n    handlePathername = (elem) => {\n\n        this.setState({\n            pathername: elem.target.value\n        })\n    }\n\n    handlePosition = (elem) => {\n\n        this.setState({\n            position: elem.target.value\n        })\n    }\n\n    handleSalary = (elem) => {\n\n        this.setState({\n            salary: elem.target.value\n        })\n    }\n\n\n    render() {\n        const {handleClose} = this.props;\n\n        return (\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input id=\"first_name\" type=\"text\" className=\"validate\" onChange={this.handleFirstname}\n                                   required={true}/>\n                            <label htmlFor=\"first_name\">First Name</label>\n                        </div>\n\n                        <div className=\"input-field col s6\">\n                            <input id=\"last_name\" type=\"text\" className=\"validate\" onChange={this.handleLastname}\n                                   required={true}/>\n                            <label htmlFor=\"last_name\">Last Name</label>\n                        </div>\n\n                        <div className=\"input-field col s6\">\n                            <input id=\"pather_name\" type=\"text\" className=\"validate\" onChange={this.handlePathername}\n                                   required={true}/>\n                            <label htmlFor=\"pather_name\">Pather Name</label>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"position\" type=\"text\" className=\"validate\" onChange={this.handlePosition}\n                                   required={true}/>\n                            <label htmlFor=\"position\">Position</label>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"salary\" type=\"number\" className=\"validate\" min={0} onChange={this.handleSalary}\n                                   required={true}/>\n                            <label htmlFor=\"salary\">Salary</label>\n                        </div>\n                    </div>\n\n                    <div className=\"buttons right\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Create\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n\n                        <button className=\"btn waves-effect waves-light\" type=\"button\" name=\"action\"\n                                onClick={handleClose}>Cancel\n                            <i className=\"material-icons right\">cancel</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default EmployeCreate;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport BodyPortal from \"../../Portals/BodyPortal/BodyPortal\";\n\nclass EditTemplate extends Component {\n    state = {\n        createIsActivate: false\n    }\n\n    render() {\n        const {name, children, modal} = this.props;\n\n        return (\n            <Fragment>\n                <h3>{name}</h3>\n\n                <div className=\"container\">\n                    {children}\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default EditTemplate;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {doQuery} from \"../../utils\";\n\nclass EmployeEdit extends Component {\n\n    state = {\n        firstname: '',\n        lastname: '',\n        pathername: '',\n        position: '',\n        salary: '',\n        mounted: false\n    }\n\n    componentDidMount() {\n        const {id} = this.props;\n\n        doQuery(`/api/employe/${id}`)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({\n                    mounted: true\n                });\n            });\n    }\n\n    handleSubmit = (e) => {\n        const {firstname, lastname, pathername, position, salary} = this.state;\n        const {id} = this.props;\n\n\n        const json = JSON.stringify({\n            firstname: firstname,\n            lastname: lastname,\n            pathername: pathername,\n            position: position,\n            salary: salary\n        });\n\n        doQuery(`/api/employe/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: json\n        });\n    }\n\n    handleFirstname = (elem) => {\n        this.setState({\n            firstname: elem.target.value\n        })\n    }\n\n    handleLastname = (elem) => {\n\n        this.setState({\n            lastname: elem.target.value\n        })\n    }\n\n    handlePathername = (elem) => {\n\n        this.setState({\n            pathername: elem.target.value\n        })\n    }\n\n    handlePosition = (elem) => {\n\n        this.setState({\n            position: elem.target.value\n        })\n    }\n\n    handleSalary = (elem) => {\n\n        this.setState({\n            salary: elem.target.value\n        })\n    }\n\n\n    render() {\n        const {mounted} = this.state;\n        const {name} = this.props;\n\n        return (mounted && (\n                <Fragment>\n                    <h2>\n                        {name}\n                    </h2>\n                    <div className=\"row\">\n                        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                            <div className=\"row\">\n                                <div className=\"input-field col s6\">\n                                    <input id=\"first_name\" type=\"text\" className=\"validate\"\n                                           onChange={this.handleFirstname}\n                                           required={true}/>\n                                    <label htmlFor=\"first_name\">First Name</label>\n                                </div>\n\n                                <div className=\"input-field col s6\">\n                                    <input id=\"last_name\" type=\"text\" className=\"validate\"\n                                           onChange={this.handleLastname}\n                                           required={true}/>\n                                    <label htmlFor=\"last_name\">Last Name</label>\n                                </div>\n\n                                <div className=\"input-field col s6\">\n                                    <input id=\"pather_name\" type=\"text\" className=\"validate\"\n                                           onChange={this.handlePathername}\n                                           required={true}/>\n                                    <label htmlFor=\"pather_name\">Pather Name</label>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"input-field col s12\">\n                                    <input id=\"position\" type=\"text\" className=\"validate\"\n                                           onChange={this.handlePosition}\n                                           required={true}/>\n                                    <label htmlFor=\"position\">Position</label>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"input-field col s12\">\n                                    <input id=\"salary\" type=\"number\" className=\"validate\" min={0}\n                                           onChange={this.handleSalary}\n                                           required={true}/>\n                                    <label htmlFor=\"salary\">Salary</label>\n                                </div>\n                            </div>\n\n                            <div className=\"buttons right\">\n                                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Update\n                                    <i className=\"material-icons right\">send</i>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </Fragment>\n            )\n        );\n    }\n\n}\n\nexport default EmployeEdit;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {doQuery} from \"../../utils\";\n\nclass DepartmentTable extends Component {\n\n    handleDelete = (id) => {\n        doQuery(`/api/department/${id}`, {\n            method: 'DELETE'\n        }).then(() => {\n            const {departmentList, setDepartments} = this.props;\n            setDepartments(departmentList.length === 1 ? Array() : departmentList.filter(department => department.id !== id));\n        })\n    }\n\n    render() {\n        const {departmentList} = this.props;\n\n        return (\n            <Fragment>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    {departmentList.map((department, index) =>\n                        <tr key={index}>\n                            <td>{department.name}</td>\n                            <td><Link to={`/department/${department.id}`}>Edit</Link>\n                            </td>\n                            <td><a onClick={() => this.handleDelete(department.id)} href=\"#\">Delete</a></td>\n                        </tr>)}\n                    </tbody>\n                </table>\n            </Fragment>\n        );\n    }\n}\n\nexport default DepartmentTable;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {doQuery} from \"../../utils\";\n\nclass DepartmentCreate extends Component {\n    state = {\n        name: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {name} = this.state;\n        const {handleClose, departmentList, setDepartment} = this.props;\n\n\n        const json = JSON.stringify({\n            name: name\n        });\n\n        doQuery('/api/department', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: json\n        })\n            .then(response => response.json())\n            .then(json => {\n                departmentList.push(json)\n                setDepartment(departmentList);\n                handleClose();\n            });\n    }\n\n    handleName = (elem) => {\n        this.setState({\n            name: elem.target.value\n        })\n    }\n\n    render() {\n        const {handleClose} = this.props;\n\n        return (\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input id=\"name\" type=\"text\" className=\"validate\" onChange={this.handleName}\n                                   required={true}/>\n                            <label htmlFor=\"name\">Name</label>\n                        </div>\n                    </div>\n\n                    <div className=\"buttons right\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Create\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n\n                        <button className=\"btn waves-effect waves-light\" type=\"button\" name=\"action\"\n                                onClick={handleClose}>Cancel\n                            <i className=\"material-icons right\">cancel</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default DepartmentCreate;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {doQuery} from \"../../utils\";\n\nclass DepartmentEdit extends Component {\n    state = {\n        name: ''\n    }\n\n    handleSubmit = () => {\n        const {name} = this.state;\n        const {id} = this.props;\n\n        const json = JSON.stringify({\n            name: name\n        });\n\n        doQuery(`/api/department/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: json\n        });\n    }\n\n\n    handleName = (elem) => {\n        this.setState({\n            name: elem.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input id=\"name\" type=\"text\" className=\"validate\" onChange={this.handleName}\n                                   required={true}/>\n                            <label htmlFor=\"name\">Name</label>\n                        </div>\n                    </div>\n\n                    <div className=\"buttons right\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Update\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default DepartmentEdit;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {doQuery} from \"../../utils\";\n\nclass ProjectTable extends Component {\n\n    handleDelete = (id) => {\n        doQuery(`/api/project/${id}`, {\n            method: 'DELETE'\n        }).then(() => {\n            const {projectList, setProject} = this.props;\n            setProject(projectList.length === 1 ? Array() : projectList.filter(project => project.id !== id));\n        })\n    }\n\n    render() {\n        const {projectList} = this.props;\n\n        return (\n            <Fragment>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Cost</th>\n                        <th>Department</th>\n                        <th>Date Beg</th>\n                        <th>Date End</th>\n                        <th>Date End Real</th>\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    {projectList.map((project, index) =>\n                        <tr key={index}>\n                            <td>{project.name}</td>\n                            <td>{project.cost}</td>\n                            <td>{project.department.name}</td>\n                            <td>{project.date_beg}</td>\n                            <td>{project.date_end}</td>\n                            <td>{project.date_end_real}</td>\n                            <td><Link to={`/project/${project.id}`}>Edit</Link>\n                            </td>\n                            <td><a onClick={() => this.handleDelete(project.id)} href=\"#\">Delete</a></td>\n                        </tr>)}\n                    </tbody>\n                </table>\n            </Fragment>\n        );\n    }\n}\n\nexport default ProjectTable;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {doQuery} from \"../../utils\";\nimport {Select} from \"react-materialize\";\n\nclass ProjectCreate extends Component {\n\n    state = {\n        name: '',\n        cost: '',\n        departmentID: '',\n        date_beg: '',\n        date_end: '',\n        date_end_real: '',\n        departmentList: Array()\n    }\n\n    componentDidMount() {\n        doQuery(\"/api/department\")\n            .then(response => response.json())\n            .then(json => {\n                const array = Array.from(json);\n                this.setState({\n                    departmentList: array,\n                    departmentID: array.length === 0 ? this.state.departmentID : array[0].id\n                })\n            })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {name, cost, departmentID, departmentList, date_beg, date_end, date_end_real} = this.state;\n        const {handleClose, projectList, setProject} = this.props;\n\n        const json = JSON.stringify({\n            name: name,\n            cost: cost,\n            department: departmentList.find(department => department.id == departmentID),\n            date_beg: date_beg,\n            date_end: date_end,\n            date_end_real: date_end_real\n        });\n\n        doQuery('/api/project', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: json\n        })\n            .then(response => response.json())\n            .then(json => {\n                projectList.push(json);\n                setProject(projectList);\n                handleClose();\n            });\n    }\n\n    handleName = (elem) => {\n        this.setState({\n            name: elem.target.value\n        })\n    }\n\n    handleCost = (elem) => {\n        this.setState({\n            cost: elem.target.value\n        })\n    }\n\n    handleDepartment = (elem) => {\n        this.setState({\n            departmentID: elem.target.value\n        })\n    }\n\n    handleDateBeg = (elem) => {\n        this.setState({\n            date_beg: elem.target.value\n        })\n    }\n\n    handleDateEnd = (elem) => {\n        this.setState({\n            date_end: elem.target.value\n        })\n    }\n\n    handleDateEndReal = (elem) => {\n        this.setState({\n            date_end_real: elem.target.value\n        })\n    }\n\n    render() {\n        const {handleClose} = this.props;\n        const {departmentList} = this.state;\n\n        return (\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input id=\"name\" type=\"text\" className=\"validate\" onChange={this.handleName}\n                                   required={true}/>\n                            <label htmlFor=\"name\">Name</label>\n                        </div>\n\n                        <div className=\"input-field col s6\">\n                            <input id=\"cost\" type=\"text\" className=\"validate\" onChange={this.handleCost}\n                                   required={true}/>\n                            <label htmlFor=\"cost\">Cost</label>\n                        </div>\n                    </div>\n\n                    <div className=\"input-field col s12 m6\">\n                        <Select\n                            id=\"Select-9\"\n                            multiple={false}\n                            onChange={this.handleDepartment}\n                            options={{\n                                classes: '',\n                                dropdownOptions: {\n                                    alignment: 'left',\n                                    autoTrigger: true,\n                                    closeOnClick: true,\n                                    constrainWidth: true,\n                                    coverTrigger: true,\n                                    hover: false,\n                                    inDuration: 150,\n                                    onCloseEnd: null,\n                                    onCloseStart: null,\n                                    onOpenEnd: null,\n                                    onOpenStart: null,\n                                    outDuration: 250\n                                }\n                            }} required={true}>\n                            {departmentList.map(department =>\n                                <option key={department.id} value={department.id}>{department.name}</option>)}\n                        </Select>\n                    </div>\n\n                    <div className=\"input-field col s6\">\n                        <input id=\"date_beg\" type=\"date\" className=\"validate\" onChange={this.handleDateBeg}\n                               required={true}/>\n                        <label htmlFor=\"date_beg\">Date Beg</label>\n                    </div>\n\n                    <div className=\"input-field col s12\">\n                        <input id=\"date_end\" type=\"date\" className=\"validate\" onChange={this.handleDateEnd}\n                               required={true}/>\n                        <label htmlFor=\"date_end\">Date End</label>\n                    </div>\n\n                    <div className=\"input-field col s12\">\n                        <input id=\"date_end_real\" type=\"date\" className=\"validate\" min={0}\n                               onChange={this.handleDateEndReal}\n                               required={true}/>\n                        <label htmlFor=\"date_end_real\">Date End Real</label>\n                    </div>\n\n                    <div className=\"buttons right\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Create\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n\n                        <button className=\"btn waves-effect waves-light\" type=\"button\" name=\"action\"\n                                onClick={handleClose}>Cancel\n                            <i className=\"material-icons right\">cancel</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default ProjectCreate;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {doQuery} from \"../../utils\";\nimport {Select} from \"react-materialize\";\n\nclass ProjectEdit extends Component {\n\n    state = {\n        name: '',\n        cost: '',\n        departmentID: '',\n        date_beg: '',\n        date_end: '',\n        date_end_real: '',\n        departmentList: Array()\n    }\n\n    componentDidMount() {\n        doQuery(\"/api/department\")\n            .then(response => response.json())\n            .then(json => {\n                const array = Array.from(json);\n                this.setState({\n                    departmentList: array,\n                    departmentID: array.length === 0 ? this.state.departmentID : array[0].id\n                })\n            })\n    }\n\n    handleSubmit = (e) => {\n        const {name, cost, departmentID, departmentList, date_beg, date_end, date_end_real} = this.state;\n        const {id} = this.props\n\n        const json = JSON.stringify({\n            name: name,\n            cost: cost,\n            department: departmentList.find(department => department.id == departmentID),\n            date_beg: date_beg,\n            date_end: date_end,\n            date_end_real: date_end_real\n        });\n\n        doQuery(`/api/project/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: json\n        });\n    }\n\n    handleName = (elem) => {\n        this.setState({\n            name: elem.target.value\n        })\n    }\n\n    handleCost = (elem) => {\n        this.setState({\n            cost: elem.target.value\n        })\n    }\n\n    handleDepartment = (elem) => {\n        this.setState({\n            departmentID: elem.target.value\n        })\n    }\n\n    handleDateBeg = (elem) => {\n        this.setState({\n            date_beg: elem.target.value\n        })\n    }\n\n    handleDateEnd = (elem) => {\n        this.setState({\n            date_end: elem.target.value\n        })\n    }\n\n    handleDateEndReal = (elem) => {\n        this.setState({\n            date_end_real: elem.target.value\n        })\n    }\n\n    render() {\n        const {departmentList} = this.state;\n\n        return (\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input id=\"name\" type=\"text\" className=\"validate\" onChange={this.handleName}\n                                   required={true}/>\n                            <label htmlFor=\"name\">Name</label>\n                        </div>\n\n                        <div className=\"input-field col s6\">\n                            <input id=\"cost\" type=\"text\" className=\"validate\" onChange={this.handleCost}\n                                   required={true}/>\n                            <label htmlFor=\"cost\">Cost</label>\n                        </div>\n                    </div>\n\n                    <div className=\"input-field col s12 m6\">\n                        <Select\n                            id=\"Select-9\"\n                            multiple={false}\n                            onChange={this.handleDepartment}\n                            options={{\n                                classes: '',\n                                dropdownOptions: {\n                                    alignment: 'left',\n                                    autoTrigger: true,\n                                    closeOnClick: true,\n                                    constrainWidth: true,\n                                    coverTrigger: true,\n                                    hover: false,\n                                    inDuration: 150,\n                                    onCloseEnd: null,\n                                    onCloseStart: null,\n                                    onOpenEnd: null,\n                                    onOpenStart: null,\n                                    outDuration: 250\n                                }\n                            }} required={true}>\n                            {departmentList.map(department =>\n                                <option key={department.id} value={department.id}>{department.name}</option>)}\n                        </Select>\n                    </div>\n\n                    <div className=\"input-field col s6\">\n                        <input id=\"date_beg\" type=\"date\" className=\"validate\" onChange={this.handleDateBeg}\n                               required={true}/>\n                        <label htmlFor=\"date_beg\">Date Beg</label>\n                    </div>\n\n                    <div className=\"input-field col s12\">\n                        <input id=\"date_end\" type=\"date\" className=\"validate\" onChange={this.handleDateEnd}\n                               required={true}/>\n                        <label htmlFor=\"date_end\">Date End</label>\n                    </div>\n\n                    <div className=\"input-field col s12\">\n                        <input id=\"date_end_real\" type=\"date\" className=\"validate\" min={0}\n                               onChange={this.handleDateEndReal}\n                               required={true}/>\n                        <label htmlFor=\"date_end_real\">Date End Real</label>\n                    </div>\n\n                    <div className=\"buttons right\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Update\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default ProjectEdit;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {doQuery} from \"../../utils\";\n\nclass DepartmentEmployeTable extends Component {\n\n    handleDelete = (id) => {\n        doQuery(`/api/departmentEmploye/${id}`, {\n            method: 'DELETE'\n        }).then(() => {\n            const {departmentEmployeList, setDepartmentEmploye} = this.props;\n            setDepartmentEmploye(departmentEmployeList.length === 1 ? Array() : departmentEmployeList.filter(project => project.id !== id));\n        })\n    }\n\n    render() {\n        const {departmentEmployeList} = this.props;\n\n        return (\n            <Fragment>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>Department</th>\n                        <th>Employe</th>\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    {departmentEmployeList.map((dpEmploye, index) =>\n                        <tr key={index}>\n                            <td>{dpEmploye.department.name}</td>\n                            <td>{dpEmploye.employe.firstnamr} {dpEmploye.employe.lastname} {dpEmploye.employe.pathername}</td>\n                            <td><Link to={`/departmentEmploye/${dpEmploye.id}`}>Edit</Link>\n                            </td>\n                            <td><a onClick={() => this.handleDelete(dpEmploye.id)} href=\"#\">Delete</a></td>\n                        </tr>)}\n                    </tbody>\n                </table>\n            </Fragment>\n        );\n    }\n}\n\nexport default DepartmentEmployeTable;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {doQuery} from \"../../utils\";\nimport {Select} from \"react-materialize\";\n\nclass DepartmentEmployeCreate extends Component {\n\n    state = {\n        departmentID: '',\n        employeID: '',\n        departmentList: Array(),\n        employeList: Array()\n    }\n\n    componentDidMount() {\n        doQuery(\"/api/department\")\n            .then(response => response.json())\n            .then(json => {\n                const array = Array.from(json);\n                this.setState({\n                    departmentList: array,\n                    departmentID: array.length === 0 ? this.state.departmentID : array[0].id\n                })\n            });\n\n        doQuery(\"/api/employe\")\n            .then(response => response.json())\n            .then(json => {\n                const array = Array.from(json);\n                this.setState({\n                    employeList: array,\n                    employeID: array.length === 0 ? this.state.employeID : array[0].id\n                })\n            });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {departmentID, departmentList, employeID, employeList} = this.state;\n        const {handleClose, departmentEmployeList, setDepartmentEmploye} = this.props;\n\n\n        const json = JSON.stringify({\n            department: departmentList.find(dep => dep.id == departmentID),\n            employe: employeList.find(emp => emp.id == employeID)\n        });\n\n        doQuery('/api/departmentEmploye', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: json\n        })\n            .then(response => response.json())\n            .then(json => {\n                departmentEmployeList.push(json);\n                setDepartmentEmploye(departmentEmployeList);\n                handleClose();\n            });\n    }\n\n\n    handleDepartment = (elem) => {\n        this.setState({\n            departmentID: elem.target.value\n        })\n    }\n\n    handleEmploye = (elem) => {\n        this.setState({\n            employeID: elem.target.value\n        })\n    }\n\n    render() {\n        const {handleClose} = this.props;\n        const {departmentList, employeList} = this.state;\n\n        return (\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n\n                    <div className=\"input-field col s12 m6\">\n                        <Select\n                            id=\"Select-9\"\n                            multiple={false}\n                            onChange={this.handleDepartment}\n                            options={{\n                                classes: '',\n                                dropdownOptions: {\n                                    alignment: 'left',\n                                    autoTrigger: true,\n                                    closeOnClick: true,\n                                    constrainWidth: true,\n                                    coverTrigger: true,\n                                    hover: false,\n                                    inDuration: 150,\n                                    onCloseEnd: null,\n                                    onCloseStart: null,\n                                    onOpenEnd: null,\n                                    onOpenStart: null,\n                                    outDuration: 250\n                                }\n                            }} required={true}>\n                            {departmentList.map(department =>\n                                <option key={\"department\" + department.id}\n                                        value={department.id}>{department.name}</option>)}\n                        </Select>\n                    </div>\n\n                    <div className=\"input-field col s12 m6\">\n                        <Select\n                            id=\"Select-9\"\n                            multiple={false}\n                            onChange={this.handleEmploye}\n                            options={{\n                                classes: '',\n                                dropdownOptions: {\n                                    alignment: 'left',\n                                    autoTrigger: true,\n                                    closeOnClick: true,\n                                    constrainWidth: true,\n                                    coverTrigger: true,\n                                    hover: false,\n                                    inDuration: 150,\n                                    onCloseEnd: null,\n                                    onCloseStart: null,\n                                    onOpenEnd: null,\n                                    onOpenStart: null,\n                                    outDuration: 250\n                                }\n                            }} required={true}>\n                            {employeList.map(employe =>\n                                <option key={\"employe_\" + employe.id}\n                                        value={employe.id}>{employe.firstname} {employe.lastname} {employe.pathername}</option>)}\n                        </Select>\n                    </div>\n\n                    <div className=\"buttons right\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Create\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n\n                        <button className=\"btn waves-effect waves-light\" type=\"button\" name=\"action\"\n                                onClick={handleClose}>Cancel\n                            <i className=\"material-icons right\">cancel</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default DepartmentEmployeCreate;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {doQuery} from \"../../utils\";\nimport {Select} from \"react-materialize\";\n\nclass DepartmentEmployeEdit extends Component {\n\n    state = {\n        departmentID: '',\n        employeID: '',\n        departmentList: Array(),\n        employeList: Array()\n    }\n\n    componentDidMount() {\n        doQuery(\"/api/department\")\n            .then(response => response.json())\n            .then(json => {\n                const array = Array.from(json);\n                this.setState({\n                    departmentList: array,\n                    departmentID: array.length === 0 ? this.state.departmentID : array[0].id\n                })\n            });\n\n        doQuery(\"/api/employe\")\n            .then(response => response.json())\n            .then(json => {\n                const array = Array.from(json);\n                this.setState({\n                    employeList: array,\n                    employeID: array.length === 0 ? this.state.employeID : array[0].id\n                })\n            });\n    }\n\n    handleSubmit = (e) => {\n        const {departmentID, departmentList, employeID, employeList} = this.state;\n        const {id} = this.props;\n\n        const json = JSON.stringify({\n            department: departmentList.find(dep => dep.id == departmentID),\n            employe: employeList.find(emp => emp.id == employeID)\n        });\n\n        doQuery(`/api/departmentEmploye/${id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: json\n        });\n    }\n\n\n    handleDepartment = (elem) => {\n        this.setState({\n            departmentID: elem.target.value\n        })\n    }\n\n    handleEmploye = (elem) => {\n        this.setState({\n            employeID: elem.target.value\n        })\n    }\n\n    render() {\n        const {handleClose} = this.props;\n        const {departmentList, employeList} = this.state;\n\n        return (\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n\n                    <div className=\"input-field col s12 m6\">\n                        <Select\n                            id=\"Select-9\"\n                            multiple={false}\n                            onChange={this.handleDepartment}\n                            options={{\n                                classes: '',\n                                dropdownOptions: {\n                                    alignment: 'left',\n                                    autoTrigger: true,\n                                    closeOnClick: true,\n                                    constrainWidth: true,\n                                    coverTrigger: true,\n                                    hover: false,\n                                    inDuration: 150,\n                                    onCloseEnd: null,\n                                    onCloseStart: null,\n                                    onOpenEnd: null,\n                                    onOpenStart: null,\n                                    outDuration: 250\n                                }\n                            }} required={true}>\n                            {departmentList.map(department =>\n                                <option key={\"department\" + department.id}\n                                        value={department.id}>{department.name}</option>)}\n                        </Select>\n                    </div>\n\n                    <div className=\"input-field col s12 m6\">\n                        <Select\n                            id=\"Select-9\"\n                            multiple={false}\n                            onChange={this.handleEmploye}\n                            options={{\n                                classes: '',\n                                dropdownOptions: {\n                                    alignment: 'left',\n                                    autoTrigger: true,\n                                    closeOnClick: true,\n                                    constrainWidth: true,\n                                    coverTrigger: true,\n                                    hover: false,\n                                    inDuration: 150,\n                                    onCloseEnd: null,\n                                    onCloseStart: null,\n                                    onOpenEnd: null,\n                                    onOpenStart: null,\n                                    outDuration: 250\n                                }\n                            }} required={true}>\n                            {employeList.map(employe =>\n                                <option key={\"employe_\" + employe.id}\n                                        value={employe.id}>{employe.firstname} {employe.lastname} {employe.pathername}</option>)}\n                        </Select>\n                    </div>\n\n                    <div className=\"buttons right\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Update\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n\n                        <button className=\"btn waves-effect waves-light\" type=\"button\" name=\"action\"\n                                onClick={handleClose}>Cancel\n                            <i className=\"material-icons right\">cancel</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default DepartmentEmployeEdit;","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {doQuery} from \"../../utils.js\";\n\nclass Registration extends Component {\n    state = {\n        username: '',\n        password: ''\n    }\n\n    handleUsername = (elem) => {\n        this.setState({\n            username: elem.target.value\n        });\n    }\n\n    handlePassword = (elem) => {\n        this.setState({\n            password: elem.target.value\n        });\n    }\n\n    handleSubmit = () => {\n        const {username, password} = this.state;\n\n        const json = JSON.stringify({\n            username: username,\n            password: password,\n            roles: ['USER']\n        });\n\n        doQuery(`/user`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: json\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input id=\"name\" type=\"text\" className=\"validate\" onChange={this.handleUsername}\n                                   required={true}/>\n                            <label htmlFor=\"name\">Username</label>\n                        </div>\n\n                        <div className=\"input-field col s6\">\n                            <input id=\"name\" type=\"password\" className=\"validate\" onChange={this.handlePassword}\n                                   required={true}/>\n                            <label htmlFor=\"name\">Password</label>\n                        </div>\n                    </div>\n\n                    <div className=\"buttons right\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Registration\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Registration;","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink,\n} from \"react-router-dom\";\nimport './App.css';\nimport Navbar from \"./Component/Navbar/Navbar\";\nimport EntityTemplate from \"./Component/EntityTemplate/EntityTemplate\";\nimport EmployTable from \"./Roots/EmployTable/EmployTable\";\nimport BodyPortal from \"./Portals/BodyPortal/BodyPortal\";\nimport EmployeCreate from \"./Roots/EmployeCreate/EmployeCreate\";\nimport {doQuery} from \"./utils\";\nimport EditTemplate from \"./Component/EditTemplate/EditTemplate\";\nimport EmployeEdit from \"./Roots/EmployeEdit/EmployeEdit\";\nimport DepartmentTable from \"./Roots/DepartmentTable/DepartmentTable\";\nimport DepartmentCreate from \"./Roots/DepartmentCreate/DepartmentCreate\";\nimport DepartmentEdit from \"./Roots/DepartmentEdit/DepartmentEdit\";\nimport ProjectTable from \"./Roots/ProjectTable/ProjectTable\";\nimport ProjectCreate from \"./Roots/ProjectCreate/ProjectCreate\";\nimport ProjectEdit from \"./Roots/ProjectEdit/ProjectEdit\";\nimport DepartmentEmployeTable from \"./Roots/DepartmentEmployeTable/DepartmentEmployeTable\";\nimport DepartmentEmployeCreate from \"./Roots/DepartmentEmployeCreate/DepartmentEmployeCreate\";\nimport DepartmentEmployeEdit from \"./Roots/DepartmentEmployeEdit/DepartmentEmployeEdit\";\nimport Registration from \"./Roots/Registration/Registration\";\n\nclass App extends Component {\n\n    state = {\n        user: null,\n        mounted: false,\n        employeList: Array(),\n        departmentList: Array(),\n        projectList: Array(),\n        departmentEmployeList: Array()\n    }\n\n    setEmployes = (employes) => {\n        this.setState({\n            employeList: Array.from(employes)\n        });\n    }\n\n    setDepartment = (departments) => {\n        this.setState({\n            departmentList: Array.from(departments)\n        });\n    }\n\n    setProject = (project) => {\n        this.setState({\n            projectList: Array.from(project)\n        });\n    }\n\n    setDepartmentEmploye = (departmentEmployes) => {\n        this.setState({\n            departmentEmployeList: Array.from(departmentEmployes)\n        });\n    }\n\n\n    componentDidMount() {\n        doQuery('/user')\n            .then(response => response.json())\n            .then(json => {\n                doQuery('/api/employe')\n                    .then(response => response.json())\n                    .then(json => {\n                        this.setState({\n                            employeList: json\n                        });\n                    });\n\n                doQuery('/api/department')\n                    .then(response => response.json())\n                    .then(json => {\n                        this.setState({\n                            departmentList: json\n                        });\n                    });\n\n                doQuery('/api/project')\n                    .then(response => response.json())\n                    .then(json => {\n                        this.setState({\n                            projectList: json\n                        });\n                    });\n\n                doQuery('/api/departmentEmploye')\n                    .then(response => response.json())\n                    .then(json => {\n                        this.setState({\n                            departmentEmployeList: json\n                        });\n                    });\n\n                this.setState({\n                    user: json\n                })\n            })\n            .catch(() => {\n                this.setState({\n                    user: null\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    mounted: true\n                })\n            })\n    }\n\n    render() {\n        const {employeList, departmentList, projectList, departmentEmployeList, mounted, user} = this.state;\n\n        return mounted ? (\n            <div className=\"App\">\n                <Router>\n                    <header>\n                        <Navbar user={user}/>\n                    </header>\n\n                    <main>\n                        {user !== null ? (\n                            <Switch>\n                                <Route path=\"/employe/:id\" render={({match}) => (\n                                    <EditTemplate name=\"Employe\" children={<EmployeEdit id={match.params.id}/>}/>\n                                )}/>\n\n                                <Route exact path=\"/employe\" render={() => (\n                                    <EntityTemplate name=\"Employe\"\n                                                    children={<EmployTable setEmployes={(e) => this.setEmployes(e)}\n                                                                           employeList={employeList}/>}\n                                                    modal={(handleClose) => <EmployeCreate\n                                                        setEmployes={(e) => this.setEmployes(e)}\n                                                        employeList={employeList}\n                                                        handleClose={handleClose}/>}\n                                    />\n                                )}/>\n\n                                <Route path=\"/department/:id\" render={({match}) => (\n                                    <EditTemplate name=\"Department\" children={<DepartmentEdit id={match.params.id}/>}/>\n                                )}/>\n\n                                <Route exact path=\"/department\">\n                                    <EntityTemplate name=\"Department\"\n                                                    children={<DepartmentTable\n                                                        setDepartments={(e) => this.setDepartment(e)}\n                                                        departmentList={departmentList}/>}\n                                                    modal={(handleClose) =>\n                                                        <DepartmentCreate\n                                                            setDepartment={(e) => this.setDepartment(e)}\n                                                            departmentList={departmentList}\n                                                            handleClose={handleClose}/>\n                                                    }\n                                    />\n                                </Route>\n\n                                <Route path=\"/project/:id\" render={({match}) => (\n                                    <EditTemplate name=\"Project\" children={<ProjectEdit id={match.params.id}/>}/>\n                                )}/>\n\n                                <Route exact path=\"/project\" render={() => (\n                                    <EntityTemplate name=\"Project\"\n                                                    children={<ProjectTable setProject={(e) => this.setProject(e)}\n                                                                            projectList={projectList}/>}\n                                                    modal={(handleClose) =>\n                                                        <ProjectCreate\n                                                            setProject={(e) => this.setProject(e)}\n                                                            projectList={projectList}\n                                                            handleClose={handleClose}/>}\n                                    />\n                                )}/>\n\n                                <Route path=\"/departmentEmploye/:id\" render={({match}) => (\n                                    <EditTemplate name=\"Project\"\n                                                  children={<DepartmentEmployeEdit id={match.params.id}/>}/>\n                                )}/>\n\n                                <Route exact path=\"/departmentEmploye\">\n                                    <EntityTemplate name=\"DepartmentEmploye\"\n                                                    children={<DepartmentEmployeTable\n                                                        setDepartmentEmploye={(e) => this.setDepartmentEmploye(e)}\n                                                        departmentEmployeList={departmentEmployeList}/>}\n                                                    modal={(handleClose) =>\n                                                        <DepartmentEmployeCreate\n                                                            setDepartmentEmploye={(e) => this.setDepartmentEmploye(e)}\n                                                            departmentEmployeList={departmentEmployeList}\n                                                            handleClose={handleClose}/>\n                                                    }\n                                    />\n                                </Route>\n\n                                <Route path=\"*\">\n                                    <div>Not found</div>\n                                </Route>\n                            </Switch>\n                        ) : (\n                            <Switch>\n                                <Route path=\"/registration\">\n                                    <Registration/>\n                                </Route>\n                            </Switch>\n                        )}\n                    </main>\n                </Router>\n\n            </div>\n        ) : (\n            <div/>\n        );\n\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}